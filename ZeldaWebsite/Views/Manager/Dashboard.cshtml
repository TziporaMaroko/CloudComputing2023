@model List<ZeldaWebsite.Models.Order>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/ManagerLayout.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/gh/alumuko/vanilla-datetimerange-picker@latest/dist/vanilla-datetimerange-picker.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- ============================================================== -->
<!-- Yearly Sales -->
<!-- ============================================================== -->
<div class="row">
    <div class="col-lg-7 mb-10 ml-10">

        <div class="card oh">
            <div class="card-body">
                <h4 class="card-title">Graph Overview</h4>
                <input type="text" id="date-picker1" class="flatpickr" size="24" style="text-align:center" placeholder="Select Date Range..">
                <div id="line-chart" style="height: 350px;"></div>
            </div>
            <div class="card-body bg-light">
                <div class="row text-center m-b-20">
                    <div class="col-lg-4 col-md-4 m-t-20">
                        <h2 class="m-b-0 font-light">@Model.Count</h2><span class="text-muted">Total orders</span>
                    </div>
                    <div class="col-lg-4 col-md-4 m-t-20">
                        @if (Model.Any())
                        {
                            double averageTotal = Model.Average(order => order.Total);
                            <h2 class="m-b-0 font-light">@averageTotal.ToString("F2")$</h2>

                            <span class="text-muted">Average order's total</span>
                        }
                    </div>
                    <div class="col-lg-4 col-md-4 m-t-20">
                        <h2 class="m-b-0 font-light">@Model.Count</h2><span class="text-muted">Total orders</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ============================================================== -->
    <!-- News -->
    <!-- ============================================================== -->
    <div class="row">
        <!-- column -->
        <div class="col-lg-12 ml-10 mb-10">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div>
                            <h4 class="card-title">Sales Overview</h4>
                            <h5 class="card-subtitle">Check the monthly sales</h5>
                        </div>
                        <input type="text" id="date-picker2" class="flatpickr ml-10" size="24" style="text-align:center" placeholder="Select Date Range..">
                    </div>
                </div>
                <div class="table-responsive">

                        <table id="order-table" class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Date</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td class="text-center">@order.Id</td>
                                    <td class="txt-oflo">@order.FirstName</td>
                                    <td class="txt-oflo">@order.LastName</td>
                                    <td class="txt-oflo">@order.Date.Day/@order.Date.Month/@order.Date.Year</td>
                                    <td><span class="text-success">@order.Total.ToString("F2")$</span></td>
                                    <td>
                                        <a asp-action="OrderDetails" asp-route-id="@order.Id"><strong style="color:darkblue;">Details</strong></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        window.addEventListener("load", function (event) {
            const datePicker = new flatpickr('#date-picker2', {
                mode: "range",
                onValueUpdate(selectedDates, dateStr, instance) {

                    // Convert JavaScript date objects to strings in a format that C# can parse
                    const startDate = selectedDates[0];
                    const endDate = selectedDates[1];
                    const formattedStartDate = moment(startDate).format('YYYY-MM-DDTHH:mm:ss');
                    const formattedEndDate = moment(endDate).format('YYYY-MM-DDTHH:mm:ss');

                    // Send the dates to the server using AJAX
                    $.ajax({
                        url: `/Manager/GetOrdersForDateRange?startDate=${formattedStartDate}&endDate=${formattedEndDate}`,
                        type: 'GET',
                        success(data) {

                            // Clear the table body
                            $('#order-table tbody').empty();

                            // Populate the table with the fetched data
                            $.each(data, function (index, order) {
                                var row = $('<tr>');
                                row.append('<td class="text-center">' + order.id + '</td>');
                                row.append('<td class="txt-oflo">' + order.firstName + '</td>');
                                row.append('<td class="txt-oflo">' + order.lastName + '</td>');
                                // Format and display the date
                                var dateStr = order.date ? moment(order.date).format('DD/MM/YYYY') : 'N/A';
                                row.append('<td class="txt-oflo">' + dateStr + '</td>');
                                // Format and display the total
                                var totalStr = (order.total !== undefined) ? order.total.toFixed(2) + '$' : 'N/A';
                                row.append('<td><span class="text-success">' + totalStr + '</span></td>');
                                // Add a link to order details
                                var detailsLink = '<td><a href="/Manager/OrderDetails/' + order.id + '"><strong style="color: darkblue;">Details</strong></a></td>';
                                row.append(detailsLink);
                                $('#order-table tbody').append(row);
                            });
                        },
                        error() {
                            console.log('Error fetching data');
                        },
                    });
                },
            });
        });
      
</script>


<style>
    .morris-hover.morris-default-style {
        border-radius: 10px;
        padding: 6px;
        color: #000;
        background: rgba(255, 255, 255, 0.8);
        border: solid 2px rgba(230, 230, 230, 0.8);
        font-family: sans-serif;
        font-size: 12px;
        text-align: center;
    }

    .morris-hover.morris-default-style {
        border-radius: 4px;
        padding: 10px 12px;
        color: #000;
        background: #63676b;
        border: none;
        color: #fff !important;
        box-shadow: none;
        font-size: 14px;
    }

    .morris-hover {
        position: absolute;
        z-index: 1000;
    }

    .morris-hover {
        position: absolute;
        z-index: 1;
    }

</style>
<script>
    $(function () {
        "use strict";

        // Retrieve the daily order data from the hidden div
        var dailyOrdersData = @Html.Raw(ViewBag.DailyOrdersJson);

        var config = {
            data: dailyOrdersData,
            xkey: 'period', // Change xkey to 'period' since you've formatted it as 'dd/mm/yyyy'
            ykeys: ['ordersCount', 'ordersTotal'],
            labels: ['Orders Count', 'Orders Total'],
            xLabels: 'day', // This will ensure that x-axis labels are shown for each day
            fillOpacity: 0.6,
            hideHover: 'auto',
            behaveLikeLine: true,
            resize: true,
            pointFillColors: ['#ffffff'],
            pointStrokeColors: ['#f62d51', '#7460ee', '#009efb'],
            lineColors: ['gray', 'red'],
            gridLineColor: ['#009efb', '#7460ee', '#009efb'],
            lineWidth: 1,
            hoverCallback: function (index, options, content, row) {
                // Format the tooltip content as desired
                    var dateStr = moment(row.period).format('DD/MM/YYYY');
                return '<div class="morris-hover-row-label">' + dateStr + '</div>' +
                    '<div class="morris-hover-point" style="color: red;">Orders Count: ' + row.ordersCount + '</div>' +
                    '<div class="morris-hover-point" style="color: gray;">Orders Total: ' + row.ordersTotal + '</div>';
            }
        };

        config.element = 'line-chart';
        Morris.Line(config);
    });




</script>
<script>
    window.addEventListener("load", function (event) {
        const datePicker = new flatpickr('#date-picker1', {
            mode: "range",
            onValueUpdate(selectedDates, dateStr, instance) {
                // Remove the existing graph if it exists
                const existingGraph = document.getElementById('line-chart');
                if (existingGraph) {
                    existingGraph.remove();
                }

                // Create a new div element for the graph
                const newGraphDiv = document.createElement('div');
                newGraphDiv.id = 'line-chart';
                newGraphDiv.style.height = '350px';

                // Append the new graph container to the card body
                const cardBody = document.querySelector('.card-body');
                cardBody.appendChild(newGraphDiv);

                // Convert JavaScript date objects to strings in a format that C# can parse
                const startDate = selectedDates[0];
                const endDate = selectedDates[1];
                const formattedStartDate = moment(startDate).format('YYYY-MM-DDTHH:mm:ss');
                const formattedEndDate = moment(endDate).format('YYYY-MM-DDTHH:mm:ss');

                // Send the dates to the server using AJAX
                $.ajax({
                    url: `/Manager/GetDataForDateRange?startDate=${formattedStartDate}&endDate=${formattedEndDate}`,
                    type: 'GET',
                    success(data) {

                            var config = {
                                data: data,
                                xkey: 'period',
                                ykeys: ['ordersCount', 'ordersTotal'],
                                labels: ['Orders Count', 'Orders Total'],
                                xLabels: 'day', // This will ensure that x-axis labels are shown for each day
                                fillOpacity: 0.6,
                                hideHover: 'auto',
                                behaveLikeLine: true,
                                resize: true,
                                pointFillColors: ['#ffffff'],
                                pointStrokeColors: ['#f62d51', '#7460ee', '#009efb'],
                                lineColors: ['gray', 'red'],
                                gridLineColor: ['#009efb', '#7460ee', '#009efb'],
                                lineWidth: 1,
                                hoverCallback: function (index, options, content, row) {
                                    // Format the tooltip content as desired
                                    var dateStr = moment(row.period).format('DD/MM/YYYY');
                                    return '<div class="morris-hover-row-label">' + dateStr + '</div>' +
                                        '<div class="morris-hover-point" style="color: red;">Orders Count: ' + row.ordersCount + '</div>' +
                                        '<div class="morris-hover-point" style="color: gray;">Orders Total: ' + row.ordersTotal + '</div>';
                                }
                            };

                        config.element = 'line-chart';
                        Morris.Line(config);
                    },
                    error() {
                        // Handle errors here
                    },
                });
            },
        });
    });
</script>
