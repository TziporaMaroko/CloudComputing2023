@model List<ZeldaWebsite.Models.Order>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/ManagerLayout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

<!-- Include Bootstrap Datepicker CSS and JavaScript -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>



<!-- ============================================================== -->
<!-- Yearly Sales -->
<!-- ============================================================== -->
<div class="row">
    <div class="col-lg-8 mb-10 ml-10">

        <div class="card oh">
            <div class="card-body">
                <h4 class="card-title">Graph Overview</h4>
                <form autocomplete="off">
                    <div class="flex-row d-flex justify-content-center">
                        <div class="col-xl-5 col-lg-6 col-11 px-1">
                            <div class="input-group input-daterange">
                                <label class="">Select Date Range :</label>
                                <input type="text" name="daterange" value="01/01/2018 - 01/15/2018" readonly />
                            </div>
                        </div>
                    </div>
                </form>
                <!-- Add a button to trigger the update of the graph -->
                <button id="updateGraphButton" class="genric-btn primary radius">Update Graph</button>

                <div id="line-chart" style="height: 350px;"></div>
            </div>
            <div class="card-body bg-light">
                <div class="row text-center m-b-20">
                    <div class="col-lg-4 col-md-4 m-t-20">
                        <h2 class="m-b-0 font-light">@Model.Count</h2><span class="text-muted">Total orders</span>
                    </div>
                    <div class="col-lg-4 col-md-4 m-t-20">
                        @if (Model.Any())
                        {
                            double averageTotal = Model.Average(order => order.Total);
                            <h2 class="m-b-0 font-light">@averageTotal.ToString("F2")$</h2>

                            <span class="text-muted">Average order's total</span>
                        }
                    </div>
                    <div class="col-lg-4 col-md-4 m-t-20">
                        <h2 class="m-b-0 font-light">@Model.Count</h2><span class="text-muted">Total orders</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    <!-- ============================================================== -->
    <!-- News -->
    <!-- ============================================================== -->
    <div class="row">
        <!-- column -->
        <div class="col-12 ml-10 mb-10">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex">
                        <div>
                            <h4 class="card-title">Sales Overview</h4>
                            <h5 class="card-subtitle">Check the monthly sales</h5>
                        </div>
                        <div class="ml-auto">
                            <select class="custom-select b-0">
                                <option>January</option>
                                <option value="1">February</option>
                                <option value="2" selected="">March</option>
                                <option value="3">April</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Date</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td class="text-center">@order.Id</td>
                                    <td class="txt-oflo">@order.FirstName</td>
                                    <td class="txt-oflo">@order.LastName</td>
                                    <td class="txt-oflo">@order.Date.Day/@order.Date.Month/@order.Date.Year</td>
                                    <td><span class="text-success">@order.Total.ToString("F2")$</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .morris-hover.morris-default-style {
        border-radius: 10px;
        padding: 6px;
        color: #000;
        background: rgba(255, 255, 255, 0.8);
        border: solid 2px rgba(230, 230, 230, 0.8);
        font-family: sans-serif;
        font-size: 12px;
        text-align: center;
    }

    .morris-hover.morris-default-style {
        border-radius: 4px;
        padding: 10px 12px;
        color: #000;
        background: #63676b;
        border: none;
        color: #fff !important;
        box-shadow: none;
        font-size: 14px;
    }

    .morris-hover {
        position: absolute;
        z-index: 1000;
    }

    .morris-hover {
        position: absolute;
        z-index: 1;
    }



    input {
        padding: 10px 15px !important;
        border: 1px solid #CFD8DC !important;
        border-radius: 4px !important;
        box-sizing: border-box;
        background-color: #fff !important;
        color: #000 !important;
        font-size: 16px !important;
        letter-spacing: 1px;
        position: relative;
        width: 100%;
    }

        input:focus {
            -moz-box-shadow: none !important;
            -webkit-box-shadow: none !important;
            box-shadow: none !important;
            border: 1px solid #FFA000 !important;
            outline-width: 0;
        }

    .daterangepicker {
        background-color: #fff;
        border-radius: 0 !important;
        align-content: center !important;
        padding: 0 !important;
    }

    /*Weekday Heading*/
    thead tr:nth-child(2) {
        color: #BDBDBD !important;
    }

    tbody tr td {
        padding: 5px 7px !important;
    }

    .month {
        font-size: 16px !important;
        padding-bottom: 10px !important;
        padding-top: 10px !important;
    }

    .start-date, .end-date {
        border-radius: 0px !important;
    }

    .available:hover {
        border-radius: 0px !important;
    }

    .off {
        color: #EEEEEE !important;
    }

        .off:hover {
            background-color: #EEEEEE !important;
            color: #fff !important;
        }

    .drp-buttons {
        display: none !important;
    }


</style>
<script>
    $(function () {
        "use strict";
        $('input[name="daterange"]').daterangepicker({
            "startDate": "01/01/2020",
            "endDate": "17/01/2020",
            opens: 'center',
            locale: {
                format: 'DD/MM/YYYY'
            }
        });
        // Retrieve the monthly order data from the hidden div
        var dailyOrdersData = @Html.Raw(ViewBag.DailyOrdersJson);

        var config = {
            data: dailyOrdersData,
            xkey: 'period',
            ykeys: ['ordersCount', 'ordersTotal'],
            labels: ['Orders Count', 'Orders Total'],
            fillOpacity: 0.6,
            hideHover: 'auto',
            behaveLikeLine: true,
            resize: true,
            pointFillColors: ['#ffffff'],
            pointStrokeColors: ['#f62d51', '#7460ee', '#009efb'],
            lineColors: ['gray', 'red'],
            gridLineColor: ['#009efb', '#7460ee', '#009efb'],
            lineWidth: 1
        };


        config.element = 'line-chart';
        Morris.Line(config);

    };

    $(function () {
        "use strict";
        $('input[name="daterange"]').daterangepicker({
            "startDate": "01/01/2020",
            "endDate": "17/01/2020",
            opens: 'center',
            locale: {
                format: 'DD/MM/YYYY'
            }
        });
// Define a function to update the graph based on the selected date range
        function updateGraph() {
            // Retrieve the selected date range
               
            var startDate = $('#dateRangePicker').datepicker('getStartDate');
            var endDate = $('#dateRangePicker').datepicker('getEndDate');

            // Make an AJAX request to fetch data based on the selected date range
            $.ajax({
                url: '/Manager/UpdateGraph', // Replace with the actual endpoint to fetch data
                type: 'GET',
                data: {
                    startDate: startDate.toISOString(),
                    endDate: endDate.toISOString()
                },
                success: function (data) {
                    // Update the graph with the new data
                    Morris.Line({
                        element: 'line-chart',
                        data: data,
                        xkey: 'period',
                        ykeys: ['ordersCount', 'ordersTotal'],
                        labels: ['Orders Count', 'Orders Total'],
                        fillOpacity: 0.6,
                        hideHover: 'auto',
                        behaveLikeLine: true,
                        resize: true,
                        pointFillColors: ['#ffffff'],
                        pointStrokeColors: ['#f62d51', '#7460ee', '#009efb'],
                        lineColors: ['gray', 'red'],
                        gridLineColor: ['#009efb', '#7460ee', '#009efb'],
                        lineWidth: 1
                    });
                },
                error: function () {
                    // Handle errors here
                }
            });
        }

        // Attach the updateGraph function to the button click event
        $('#updateGraphButton').on('click', function () {
            updateGraph();
        });
    });
</script>

